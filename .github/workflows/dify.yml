name: Sync Docker Images to Alibaba Cloud

on:
  # 定时任务，每天凌晨 2 点执行
  schedule:
    - cron: '0 2 * * *'
  # 允许手动触发工作流
  workflow_dispatch:

jobs:
  sync-images:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Login to Alibaba Cloud Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_REGISTRY_USERNAME }}
          password: ${{ secrets.ALIYUN_REGISTRY_PASSWORD }}

      - name: Sync images
        run: |
          # 定义镜像列表
          DIFY_IMAGES=(
            "langgenius/dify-api"
            "langgenius/dify-web"
            "postgres:15-alpine"
            "redis:6-alpine"
            "langgenius/dify-sandbox"
            "langgenius/dify-plugin-daemon"
            "ubuntu/squid:latest"
            "certbot/certbot"
            "nginx:latest"
            "semitechnologies/weaviate:1.19.0"
            "langgenius/qdrant"
            "pgvector/pgvector:pg16"
            "tensorchord/pgvecto-rs:pg16-v0.3.0"
            "ghcr.io/chroma-core/chroma:0.5.20"
            "quay.io/oceanbase/oceanbase-ce:4.3.3.0-100000142024101215"
            "container-registry.oracle.com/database/free:latest"
            "quay.io/coreos/etcd:v3.5.5"
            "minio/minio:RELEASE.2023-03-20T20-16-18Z"
            "milvusdb/milvus:v2.5.0-beta"
            "opensearchproject/opensearch:latest"
            "opensearchproject/opensearch-dashboards:latest"
            "myscale/myscaledb:1.6.4"
            "docker.elastic.co/elasticsearch/elasticsearch:8.14.3"
            "docker.elastic.co/kibana/kibana:8.14.3"
            "downloads.unstructured.io/unstructured-io/unstructured-api:latest"
          )

          for IMAGE in "${DIFY_IMAGES[@]}"; do
            # 拉取镜像
            docker pull "$IMAGE"

            # 为镜像添加阿里云镜像仓库的标签
            ALIYUN_IMAGE="${{ secrets.ALIYUN_REGISTRY }}/${{ secrets.ALIYUN_NAMESPACE }}/${IMAGE##*/}"
            docker tag "$IMAGE" "$ALIYUN_IMAGE"

            # 推送镜像到阿里云镜像仓库
            docker push "$ALIYUN_IMAGE"
          done
